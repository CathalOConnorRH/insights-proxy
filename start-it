#!/bin/sh
set -e

case $MODE in
    "prod/content")
        PROD_ONLY=true
        echo "Using conf $1"
     ;;
    "all/content")
        PROD_ONLY=false
        echo "Using conf $1"
    ;;
    "all/nocontent")
        PROD_ONLY=false
        NO_CONTENT=true
        echo "Using conf $1"
    ;;
    *)
        echo "Using default conf prod/noconent"
        NO_CONTENT=true
    ;;
esac

function is_https() {
    [[ -z $HTTPS ]] && return 0
    [[ $HTTPS ]]  && [[ $HTTPS == 'true' ]] && return 0
    return 1
}

if is_https
then
    echo "Using HTTPS=true mode"
else
    echo "Using HTTPS=false mode"
fi

function hackup () {
    if [ "$1" != prod ]
    then
        ip=`nslookup $2 | fgrep 10. | fgrep Address | egrep -o '10.[0-9]*.[0-9]*.[0-9]*' | head -n1`
    fi

    cat server.nginx.tpl |
        sed "s|DOWNSTREAM|$1.foo.redhat.com|" |
        ( [[ "$1" != "prod" ]] && sed "s|UPSTREAM_OR_IP|$ip|" || cat ) |
        ( [[ $NO_CONTENT ]] && sed "s|# content ||" || cat ) |
        ( is_https && sed "s|http://localhost:9000|https://localhost:9000|" || cat ) |
        sed "s|UPSTREAM_OR_IP|$2|" |
        sed "s|UPSTREAM|$2|" >> /tmp/nginx.conf
}

cat base.nginx.tpl > /tmp/nginx.conf
hackup prod access.redhat.com
if ! $PROD_ONLY
then
    # hackup stage accessstage.usersys.redhat.com
    hackup qa accessqa.usersys.redhat.com
    hackup ci accessci.usersys.redhat.com
fi
echo "}" >> /tmp/nginx.conf

echo -e "\n\nHere is the nginx config for this run:"
cat /tmp/nginx.conf

nginx -c /tmp/nginx.conf -g "daemon off;"
